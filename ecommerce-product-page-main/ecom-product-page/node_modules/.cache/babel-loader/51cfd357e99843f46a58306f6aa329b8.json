{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\FRONTEND CHALLENGES\\\\MY CHALLENGES\\\\ecommerce-product-page-main\\\\ecom-product-page\\\\src\\\\Components\\\\UseKey\\\\Usekey.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Usekey() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const happyPress = useKeyPress(\"h\");\n  const sadPress = useKeyPress(\"s\");\n  const robotPress = useKeyPress(\"r\");\n  const foxPress = useKeyPress(\"f\");\n\n  function useKeyPress(targetKey) {\n    _s();\n\n    // State for keeping track of whether key is pressed\n    const [keyPressed, setKeyPressed] = useState(false); // If pressed key is our target key then set to true\n\n    const downHandler = _ref => {\n      let {\n        key\n      } = _ref;\n\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }; // If released key is our target key then set to false\n\n\n    const upHandler = _ref2 => {\n      let {\n        key\n      } = _ref2;\n\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", downHandler);\n      window.addEventListener(\"keyup\", upHandler); // Remove event listeners on cleanup\n\n      return () => {\n        window.removeEventListener(\"keydown\", downHandler);\n        window.removeEventListener(\"keyup\", upHandler);\n      };\n    }, []);\n    return keyPressed;\n  }\n\n  _s(useKeyPress, \"vmDSD7h68k9Z7B48/eX82jyokKU=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"h, s, r, f\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [happyPress && \"ðŸ˜Š\", sadPress && \"ðŸ˜¢\", robotPress && \"ðŸ¤–\", foxPress && \"ðŸ¦Š\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Usekey, \"WTpbIrAWLOwQ+YRs9xFXE/n/5qM=\", false, function () {\n  return [useKeyPress, useKeyPress, useKeyPress, useKeyPress];\n});\n\n_c = Usekey;\nexport default Usekey;\n\nvar _c;\n\n$RefreshReg$(_c, \"Usekey\");","map":{"version":3,"sources":["C:/Users/Owner/Documents/FRONTEND CHALLENGES/MY CHALLENGES/ecommerce-product-page-main/ecom-product-page/src/Components/UseKey/Usekey.js"],"names":["React","useState","useEffect","Usekey","happyPress","useKeyPress","sadPress","robotPress","foxPress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAAA;;AACd,QAAMC,UAAU,GAAGC,WAAW,CAAC,GAAD,CAA9B;AACA,QAAMC,QAAQ,GAAGD,WAAW,CAAC,GAAD,CAA5B;AACA,QAAME,UAAU,GAAGF,WAAW,CAAC,GAAD,CAA9B;AACA,QAAMG,QAAQ,GAAGH,WAAW,CAAC,GAAD,CAA5B;;AAGA,WAASA,WAAT,CAAqBI,SAArB,EAAgC;AAAA;;AAC5B;AACA,UAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C,CAF4B,CAG5B;;AACA,UAAMW,WAAW,GAAE,QAAa;AAAA,UAAZ;AAAEC,QAAAA;AAAF,OAAY;;AAC5B,UAAIA,GAAG,KAAKJ,SAAZ,EAAuB;AACvBE,QAAAA,aAAa,CAAC,IAAD,CAAb;AACC;AACJ,KAJD,CAJ4B,CAS5B;;;AACA,UAAMG,SAAS,GAAG,SAAa;AAAA,UAAZ;AAAED,QAAAA;AAAF,OAAY;;AAC3B,UAAIA,GAAG,KAAKJ,SAAZ,EAAuB;AACvBE,QAAAA,aAAa,CAAC,KAAD,CAAb;AACC;AACJ,KAJD;;AAKAT,IAAAA,SAAS,CAAC,MAAM;AACZa,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCJ,WAAnC;AACAG,MAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCF,SAAjC,EAFY,CAGZ;;AACA,aAAO,MAAM;AACTC,QAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCL,WAAtC;AACAG,QAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCH,SAApC;AACH,OAHD;AAIC,KARI,EAQF,EARE,CAAT;AASI,WAAOJ,UAAP;AACH;;AAhCS,KAOLL,WAPK;;AAiChB,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,iBACKD,UAAU,IAAI,IADnB,EAEKE,QAAQ,IAAI,IAFjB,EAGKC,UAAU,IAAI,IAHnB,EAIKC,QAAQ,IAAI,IAJjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;IA7CQL,M;UACcE,W,EACFA,W,EACEA,W,EACFA,W;;;KAJZF,M;AA+CT,eAAeA,MAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\r\n\r\nfunction Usekey() {\r\n    const happyPress = useKeyPress(\"h\");\r\n    const sadPress = useKeyPress(\"s\");\r\n    const robotPress = useKeyPress(\"r\");\r\n    const foxPress = useKeyPress(\"f\");\r\n\r\n\r\n    function useKeyPress(targetKey) {\r\n        // State for keeping track of whether key is pressed\r\n        const [keyPressed, setKeyPressed] = useState(false);\r\n        // If pressed key is our target key then set to true\r\n        const downHandler =({ key }) => {\r\n            if (key === targetKey) {\r\n            setKeyPressed(true);\r\n            }\r\n        }\r\n        // If released key is our target key then set to false\r\n        const upHandler = ({ key }) => {\r\n            if (key === targetKey) {\r\n            setKeyPressed(false);\r\n            }\r\n        };\r\n        useEffect(() => {\r\n            window.addEventListener(\"keydown\", downHandler);\r\n            window.addEventListener(\"keyup\", upHandler);\r\n            // Remove event listeners on cleanup\r\n            return () => {\r\n                window.removeEventListener(\"keydown\", downHandler);\r\n                window.removeEventListener(\"keyup\", upHandler);\r\n            };\r\n            }, []);\r\n            return keyPressed;\r\n        }\r\n  return (\r\n    <div>\r\n        <div>h, s, r, f</div>\r\n        <div>\r\n            {happyPress && \"ðŸ˜Š\"}\r\n            {sadPress && \"ðŸ˜¢\"}\r\n            {robotPress && \"ðŸ¤–\"}\r\n            {foxPress && \"ðŸ¦Š\"}\r\n        </div>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nexport default Usekey"]},"metadata":{},"sourceType":"module"}